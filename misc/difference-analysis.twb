<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.18.0201.1856                               -->
<workbook source-build='10.1.14 (10100.18.0201.1856)' source-platform='mac' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='01-full-episode_video-output_file-with_derivatives' inline='true' name='federated.1tb4m4r11m588w15qe7wy1h1tm5e' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='01-full-episode_video-output_file-with_derivatives' name='textscan.006xunw0tmb1du12iw5p117ra42v'>
            <connection class='textscan' directory='/Users/francisco/work/personal/bgext-py/out' filename='20secs-rgb.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[01-full-episode_video-output_file-with_derivatives.csv].[frame]' />
              <expression op='[20secs-h8-t8.csv].[frame]' />
            </expression>
          </clause>
          <relation connection='textscan.006xunw0tmb1du12iw5p117ra42v' name='01-full-episode_video-output_file-with_derivatives.csv' table='[20secs-rgb#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='frame' ordinal='0' />
              <column datatype='real' name='R' ordinal='1' />
              <column datatype='real' name='G' ordinal='2' />
              <column datatype='real' name='B' ordinal='3' />
              <column datatype='real' name='diffR' ordinal='4' />
              <column datatype='real' name='diffG' ordinal='5' />
              <column datatype='real' name='diffB' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.006xunw0tmb1du12iw5p117ra42v' name='20secs-h8-t8.csv' table='[20secs-h8-t8#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='frame' ordinal='0' />
              <column datatype='real' name='255' ordinal='1' />
              <column datatype='real' name='R' ordinal='2' />
              <column datatype='real' name='G' ordinal='3' />
              <column datatype='real' name='B' ordinal='4' />
              <column datatype='real' name='0' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[0]' value='[20secs-h8-t8.csv].[0]' />
          <map key='[255]' value='[20secs-h8-t8.csv].[255]' />
          <map key='[B (20secs-h8-t8.csv)]' value='[20secs-h8-t8.csv].[B]' />
          <map key='[B]' value='[01-full-episode_video-output_file-with_derivatives.csv].[B]' />
          <map key='[G (20secs-h8-t8.csv)]' value='[20secs-h8-t8.csv].[G]' />
          <map key='[G]' value='[01-full-episode_video-output_file-with_derivatives.csv].[G]' />
          <map key='[R (20secs-h8-t8.csv)]' value='[20secs-h8-t8.csv].[R]' />
          <map key='[R]' value='[01-full-episode_video-output_file-with_derivatives.csv].[R]' />
          <map key='[diffB]' value='[01-full-episode_video-output_file-with_derivatives.csv].[diffB]' />
          <map key='[diffG]' value='[01-full-episode_video-output_file-with_derivatives.csv].[diffG]' />
          <map key='[diffR]' value='[01-full-episode_video-output_file-with_derivatives.csv].[diffR]' />
          <map key='[frame (20secs-h8-t8.csv)]' value='[20secs-h8-t8.csv].[frame]' />
          <map key='[frame]' value='[01-full-episode_video-output_file-with_derivatives.csv].[frame]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>frame</remote-name>
            <remote-type>20</remote-type>
            <local-name>[frame]</local-name>
            <parent-name>[01-full-episode_video-output_file-with_derivatives.csv]</parent-name>
            <remote-alias>frame</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>R</remote-name>
            <remote-type>5</remote-type>
            <local-name>[R]</local-name>
            <parent-name>[01-full-episode_video-output_file-with_derivatives.csv]</parent-name>
            <remote-alias>R</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>G</remote-name>
            <remote-type>5</remote-type>
            <local-name>[G]</local-name>
            <parent-name>[01-full-episode_video-output_file-with_derivatives.csv]</parent-name>
            <remote-alias>G</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>B</remote-name>
            <remote-type>5</remote-type>
            <local-name>[B]</local-name>
            <parent-name>[01-full-episode_video-output_file-with_derivatives.csv]</parent-name>
            <remote-alias>B</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diffR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diffR]</local-name>
            <parent-name>[01-full-episode_video-output_file-with_derivatives.csv]</parent-name>
            <remote-alias>diffR</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diffG</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diffG]</local-name>
            <parent-name>[01-full-episode_video-output_file-with_derivatives.csv]</parent-name>
            <remote-alias>diffG</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diffB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diffB]</local-name>
            <parent-name>[01-full-episode_video-output_file-with_derivatives.csv]</parent-name>
            <remote-alias>diffB</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[01-full-episode_video-output_file-with_derivatives.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>frame</remote-name>
            <remote-type>20</remote-type>
            <local-name>[frame (20secs-h8-t8.csv)]</local-name>
            <parent-name>[20secs-h8-t8.csv]</parent-name>
            <remote-alias>frame</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>255</remote-name>
            <remote-type>5</remote-type>
            <local-name>[255]</local-name>
            <parent-name>[20secs-h8-t8.csv]</parent-name>
            <remote-alias>255</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>R</remote-name>
            <remote-type>5</remote-type>
            <local-name>[R (20secs-h8-t8.csv)]</local-name>
            <parent-name>[20secs-h8-t8.csv]</parent-name>
            <remote-alias>R</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>G</remote-name>
            <remote-type>5</remote-type>
            <local-name>[G (20secs-h8-t8.csv)]</local-name>
            <parent-name>[20secs-h8-t8.csv]</parent-name>
            <remote-alias>G</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>B</remote-name>
            <remote-type>5</remote-type>
            <local-name>[B (20secs-h8-t8.csv)]</local-name>
            <parent-name>[20secs-h8-t8.csv]</parent-name>
            <remote-alias>B</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>0</remote-name>
            <remote-type>5</remote-type>
            <local-name>[0]</local-name>
            <parent-name>[20secs-h8-t8.csv]</parent-name>
            <remote-alias>0</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[20secs-h8-t8.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Frame (20Secs-H8-T8.Csv)' datatype='integer' name='[frame (20secs-h8-t8.csv)]' role='measure' type='quantitative' />
      <column caption='Frame' datatype='integer' name='[frame]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.386941' measure-ordering='alphabetic' measure-percentage='0.613059' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1tb4m4r11m588w15qe7wy1h1tm5e].[none:d127:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1tb4m4r11m588w15qe7wy1h1tm5e].[sum:d127:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1tb4m4r11m588w15qe7wy1h1tm5e]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='01-full-episode_video-output_file-with_derivatives' name='federated.1tb4m4r11m588w15qe7wy1h1tm5e' />
          </datasources>
          <datasource-dependencies datasource='federated.1tb4m4r11m588w15qe7wy1h1tm5e'>
            <column datatype='real' name='[255]' role='measure' type='quantitative' />
            <column datatype='real' name='[G]' role='measure' type='quantitative' />
            <column datatype='real' name='[diffB]' role='measure' type='quantitative' />
            <column datatype='real' name='[diffG]' role='measure' type='quantitative' />
            <column datatype='real' name='[diffR]' role='measure' type='quantitative' />
            <column caption='Frame' datatype='integer' name='[frame]' role='measure' type='quantitative' />
            <column-instance column='[frame]' derivation='None' name='[none:frame:qk]' pivot='key' type='quantitative' />
            <column-instance column='[255]' derivation='Sum' name='[sum:255:qk]' pivot='key' type='quantitative' />
            <column-instance column='[G]' derivation='Sum' name='[sum:G:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diffB]' derivation='Sum' name='[sum:diffB:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diffG]' derivation='Sum' name='[sum:diffG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diffR]' derivation='Sum' name='[sum:diffR:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tb4m4r11m588w15qe7wy1h1tm5e].[none:frame:qk]' field-type='quantitative' max='241' min='-36' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1tb4m4r11m588w15qe7wy1h1tm5e].[sum:diffG:qk]' field-type='quantitative' max='27.896581531252785' min='-28.505274876516374' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1tb4m4r11m588w15qe7wy1h1tm5e].[sum:diffR:qk]' field-type='quantitative' max='141.09351652023309' min='-125.99566919766299' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1tb4m4r11m588w15qe7wy1h1tm5e].[sum:diffB:qk]' field-type='quantitative' max='73.666577929414544' min='-54.589888353700289' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='7'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='9' y-axis-name='[federated.1tb4m4r11m588w15qe7wy1h1tm5e].[sum:diffB:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='10' y-axis-name='[federated.1tb4m4r11m588w15qe7wy1h1tm5e].[sum:diffG:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1tb4m4r11m588w15qe7wy1h1tm5e].[sum:G:qk]' />
            </encodings>
          </pane>
          <pane id='11' y-axis-name='[federated.1tb4m4r11m588w15qe7wy1h1tm5e].[sum:diffR:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1tb4m4r11m588w15qe7wy1h1tm5e].[sum:diffG:qk]' />
            </encodings>
          </pane>
          <pane id='12' y-axis-name='[federated.1tb4m4r11m588w15qe7wy1h1tm5e].[sum:255:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([federated.1tb4m4r11m588w15qe7wy1h1tm5e].[sum:diffB:qk] + ([federated.1tb4m4r11m588w15qe7wy1h1tm5e].[sum:diffG:qk] + ([federated.1tb4m4r11m588w15qe7wy1h1tm5e].[sum:diffR:qk] + [federated.1tb4m4r11m588w15qe7wy1h1tm5e].[sum:255:qk])))</rows>
        <cols>[federated.1tb4m4r11m588w15qe7wy1h1tm5e].[none:frame:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='10' param='[federated.1tb4m4r11m588w15qe7wy1h1tm5e].[sum:G:qk]' type='color' />
            <card pane-specification-id='11' param='[federated.1tb4m4r11m588w15qe7wy1h1tm5e].[sum:diffG:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tb4m4r11m588w15qe7wy1h1tm5e].[attr:255:qk]</field>
            <field>[federated.1tb4m4r11m588w15qe7wy1h1tm5e].[none:d255:qk]</field>
            <field>[federated.1tb4m4r11m588w15qe7wy1h1tm5e].[none:frame:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      CCGEzPb/A9asOk8Xydb+AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
